<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.1 (Python 3.8.5 on win32)" generated="20200731 21:44:10.274" rpa="false">
<suite id="s1" name="Tc4" source="C:\Users\ncbar\PycharmProjects\Automation\TestCases\tc4.robot">
<test id="s1-t1" name="Validations check for wrong credential">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>mnop@gmail.com</arg>
<arg>password123</arg>
</arguments>
<assign>
<var>${AUTH}</var>
</assign>
<msg timestamp="20200731 21:44:10.411" level="INFO">${AUTH} = ['mnop@gmail.com', 'password123']</msg>
<status status="PASS" starttime="20200731 21:44:10.411" endtime="20200731 21:44:10.411"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>wrongcredential</arg>
<arg>${BASE_URL}</arg>
<arg>auth=${AUTH}</arg>
</arguments>
<msg timestamp="20200731 21:44:10.412" level="INFO">Creating Session using : alias=wrongcredential, url=https://conduit.productionready.io/, headers={},                     cookies={}, auth=&lt;requests.auth.HTTPBasicAuth object at 0x000001772311B760&gt;, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200731 21:44:10.412" endtime="20200731 21:44:10.413"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>wrongcredential</arg>
<arg>/api/users/login</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200731 21:44:25.735" level="WARN">Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProtocolError('Connection aborted.', ConnectionResetError(10054, 'An existing connection was forcibly closed by the remote host', None, 10054, None))': //api/users/login</msg>
<msg timestamp="20200731 21:44:27.436" level="INFO">GET Request : url=https://conduit.productionready.io//api/users/login 
 path_url=//api/users/login 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Basic bW5vcEBnbWFpbC5jb206cGFzc3dvcmQxMjM='} 
 body=None 
 </msg>
<msg timestamp="20200731 21:44:27.436" level="INFO">GET Response : url=https://conduit.productionready.io//api/users/login 
 status=401, reason=Unauthorized 
 body=HTTP Token: Access denied.
 
 </msg>
<msg timestamp="20200731 21:44:27.436" level="INFO">c:\users\ncbar\pycharmprojects\automation\venv\lib\site-packages\urllib3\connectionpool.py:981: InsecureRequestWarning: Unverified HTTPS request is being made to host 'conduit.productionready.io'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20200731 21:44:27.441" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<status status="PASS" starttime="20200731 21:44:10.413" endtime="20200731 21:44:27.441"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<status status="PASS" starttime="20200731 21:44:27.443" endtime="20200731 21:44:27.447"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<status status="PASS" starttime="20200731 21:44:27.448" endtime="20200731 21:44:27.450"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response.headers}</arg>
</arguments>
<status status="PASS" starttime="20200731 21:44:27.451" endtime="20200731 21:44:27.453"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>401</arg>
</arguments>
<msg timestamp="20200731 21:44:27.455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200731 21:44:27.454" endtime="20200731 21:44:27.455"></status>
</kw>
<status status="PASS" starttime="20200731 21:44:10.411" endtime="20200731 21:44:27.456" critical="yes"></status>
</test>
<test id="s1-t2" name="Register User">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>regist</arg>
<arg>${BASE_URL}</arg>
</arguments>
<msg timestamp="20200731 21:44:27.461" level="INFO">Creating Session using : alias=regist, url=https://conduit.productionready.io/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200731 21:44:27.461" endtime="20200731 21:44:27.461"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>FirstName=raj1234</arg>
<arg>LastName=raj1234</arg>
<arg>UserName=raj1234</arg>
<arg>Password=raj1234</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200731 21:44:27.465" level="INFO">${body} = {'FirstName': 'raj1234', 'LastName': 'raj1234', 'UserName': 'raj1234', 'Password': 'raj1234'}</msg>
<status status="PASS" starttime="20200731 21:44:27.463" endtime="20200731 21:44:27.466"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header1}</var>
</assign>
<msg timestamp="20200731 21:44:27.467" level="INFO">${header1} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200731 21:44:27.466" endtime="20200731 21:44:27.467"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>regist</arg>
<arg>/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header1}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200731 21:44:43.008" level="FAIL">ConnectionError: ('Connection aborted.', ConnectionResetError(10054, 'An existing connection was forcibly closed by the remote host', None, 10054, None))</msg>
<status status="FAIL" starttime="20200731 21:44:27.468" endtime="20200731 21:44:43.008"></status>
</kw>
<status status="FAIL" starttime="20200731 21:44:27.460" endtime="20200731 21:44:43.010" critical="yes">ConnectionError: ('Connection aborted.', ConnectionResetError(10054, 'An existing connection was forcibly closed by the remote host', None, 10054, None))</status>
</test>
<test id="s1-t3" name="Log in">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>LogIn</arg>
<arg>${BASE_URL}</arg>
</arguments>
<msg timestamp="20200731 21:44:43.015" level="INFO">Creating Session using : alias=LogIn, url=https://conduit.productionready.io/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200731 21:44:43.015" endtime="20200731 21:44:43.015"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>LogIn</arg>
<arg>/api/users/login</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200731 21:44:58.359" level="WARN">Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProtocolError('Connection aborted.', ConnectionResetError(10054, 'An existing connection was forcibly closed by the remote host', None, 10054, None))': //api/users/login</msg>
<msg timestamp="20200731 21:45:00.203" level="INFO">GET Request : url=https://conduit.productionready.io//api/users/login 
 path_url=//api/users/login 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20200731 21:45:00.203" level="INFO">GET Response : url=https://conduit.productionready.io//api/users/login 
 status=200, reason=OK 
 body={"email":"","password":null} 
 </msg>
<msg timestamp="20200731 21:45:00.203" level="INFO">c:\users\ncbar\pycharmprojects\automation\venv\lib\site-packages\urllib3\connectionpool.py:981: InsecureRequestWarning: Unverified HTTPS request is being made to host 'conduit.productionready.io'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20200731 21:45:00.207" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200731 21:44:43.017" endtime="20200731 21:45:00.207"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<status status="PASS" starttime="20200731 21:45:00.209" endtime="20200731 21:45:00.210"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<status status="PASS" starttime="20200731 21:45:00.211" endtime="20200731 21:45:00.213"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response.headers}</arg>
</arguments>
<status status="PASS" starttime="20200731 21:45:00.214" endtime="20200731 21:45:00.217"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200731 21:45:00.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200731 21:45:00.220" endtime="20200731 21:45:00.221"></status>
</kw>
<status status="PASS" starttime="20200731 21:44:43.013" endtime="20200731 21:45:00.224" critical="yes"></status>
</test>
<test id="s1-t4" name="Get Article">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>getarticle</arg>
<arg>${BASE_URL}</arg>
</arguments>
<msg timestamp="20200731 21:45:00.229" level="INFO">Creating Session using : alias=getarticle, url=https://conduit.productionready.io/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200731 21:45:00.228" endtime="20200731 21:45:00.229"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>getarticle</arg>
<arg>/api/articles?limit=10&amp;offset=0&amp;tag=testing</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200731 21:45:15.768" level="WARN">Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProtocolError('Connection aborted.', ConnectionResetError(10054, 'An existing connection was forcibly closed by the remote host', None, 10054, None))': //api/articles?limit=10&amp;offset=0&amp;tag=testing</msg>
<msg timestamp="20200731 21:45:17.614" level="INFO">GET Request : url=https://conduit.productionready.io//api/articles?limit=10&amp;offset=0&amp;tag=testing 
 path_url=//api/articles?limit=10&amp;offset=0&amp;tag=testing 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20200731 21:45:17.614" level="INFO">GET Response : url=https://conduit.productionready.io//api/articles?limit=10&amp;offset=0&amp;tag=testing 
 status=200, reason=OK 
 body={"articles":[{"title":"oh hi","slug":"oh-hi-poorgl","body":"testing body of article","createdAt":"2020-07-29T18:17:44.621Z","updatedAt":"2020-07-30T17:09:11.688Z","tagList":["testing","boom"],"description":"nothing","author":{"username":"asdasdad34555","bio":null,"image":"https://static.productionready.io/images/smiley-cyrus.jpg","following":false},"favorited":false,"favoritesCount":1},{"title":"This is my article title","slug":"this-is-my-article-title-9ybw0f","body":"# Title of the body\n\n## subtitle... about subtitle :)\n\nSome random text... as a body content.","createdAt":"2020-07-29T10:05:17.991Z","updatedAt":"2020-07-29T10:05:17.991Z","tagList":["LoveElm","testing","Europe","Slovenia"],"description":"Just some random testing","author":{"username":"preator","bio":null,"image":"https://static.productionready.io/images/smiley-cyrus.jpg","following":false},"favorited":false,"favoritesCount":0},{"title":"testing","slug":"testing-t1bqrq","body":"testing","createdAt":"2020-07-27T11:55:20.582Z","updatedAt":"2020-07-27T11:55:20.582Z","tagList":["testing"],"description":"testing","author":{"username":"conductor","bio":"ok","image":"https://static.productionready.io/images/smiley-cyrus.jpg","following":false},"favorited":false,"favoritesCount":2},{"title":"Hello, world!","slug":"hello-world-2mykv5","body":"This is a test article, it doesn't say much.","createdAt":"2020-07-23T14:38:10.547Z","updatedAt":"2020-07-23T14:38:10.547Z","tagList":["web-dev","testing"],"description":"A short article for testing...","author":{"username":"mrhp123","bio":"This is a short bio.","image":"https://image.flaticon.com/icons/svg/2922/2922688.svg","following":false},"favorited":false,"favoritesCount":1},{"title":"testing","slug":"testing-ia1utw","body":"testing","createdAt":"2020-07-23T12:35:27.103Z","updatedAt":"2020-07-23T12:35:27.103Z","tagList":["testing"],"description":"testing","author":{"username":"conductor","bio":"ok","image":"https://static.productionready.io/images/smiley-cyrus.jpg","following":false},"favorited":false,"favoritesCount":1},{"title":"Random Title","slug":"random-title-rzh45e","body":"# I don't know markdown","createdAt":"2020-07-17T05:47:52.835Z","updatedAt":"2020-07-17T05:47:52.835Z","tagList":["demo","react","next","node","testing"],"description":"Nothing ","author":{"username":"Testing252","bio":"not a good boy!\n","image":"https://images.unsplash.com/photo-1508138221679-760a23a2285b?ixlib=rb-1.2.1\u0026q=80\u0026fm=jpg\u0026crop=entropy\u0026cs=tinysrgb\u0026w=1080\u0026fit=max\u0026ixid=eyJhcHBfaWQiOjEyMDd9","following":false},"favorited":false,"favoritesCount":1},{"title":"More Testing","slug":"more-testing-6zvizs","body":"\u003cp align=\"center\"\u003e\u003ca href=\"#nastyox\"\u003e\u003cimg src=\"http://randojs.com/images/shapeShifterGray.gif\" alt=\"Gray shape shifter\" height=\"60\"/\u003e\u003c/a\u003e\u003c/p\u003e\n\u003ch1 align=\"center\"\u003eRando.js\u003c/h1\u003e\n\u003cp align=\"center\"\u003eThe world's easiest, most powerful random function.\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\n\t\u003ca href=\"https://github.com/nastyox/Rando.js/blob/master/1.0.0.js\"\u003e\u003cimg src=\"http://randojs.com/images/smallsize.png\" height=\"20\"/\u003e\u003c/a\u003e\n    \u003ca href=\"https://twitter.com/intent/tweet?text=Ditch%20all%20that%20convoluted%20%22Math.random()%22%20code.%20Rando.js%20makes%20picking%20a%20number%201-100%20as%20simple%20as%20%22rando(1,%20100)%22,%20and%20it%20can%20do%20way%20more%20just%20as%20easily.\u0026url=https://github.com/nastyox/Rando.js\u0026hashtags=javascript,opensource,js,webdev,developers\"\u003e\u003cimg src=\"http://randojs.com/images/tweetShield.svg\" alt=\"Tweet\" height=\"20\"/\u003e\u003c/a\u003e\n\u003c/p\u003e\u003cbr/\u003e\u003cbr/\u003e\n\n\u003cp align=\"center\"\u003e\u003ca href=\"#nastyox\"\u003e\u003cimg src=\"http://randojs.com/images/10fpswide.gif\" width=\"100%\"/\u003e\u003c/a\u003e\u003ca href=\"#nastyox\"\u003e\u003cimg src=\"http://randojs.com/images/dropShadow.png\" width=\"100%\"/\u003e\u003c/a\u003e\u003c/p\u003e\u003cbr/\u003e\n\n## :hear_no_evil:  What's all the hullabaloo?  \n\u003ca href=\"https://randojs.com\" target=\"_blank\"\u003eRando.js\u003c/a\u003e helps JavaScript developers code randomness more simply and readably. Whether you need to find a random int/float between two numbers, pick a random value from an array, choose a random element from your jQuery object, grab a character from a string, toss a coin, or do anything of the like while even preventing repetitions, we've got you covered. The best part? Our commands are extremely lightweight and developer friendly- which means it won't take a toll on your project, and it's uber-simple to implement.  \u003cbr/\u003e\u003cbr/\u003e\u003cbr/\u003e\n\n\n\n## :zap:  Fast implementation  \n   **Step 1:** Paste the following script tag into the head of your HTML document:\u003cbr/\u003e\n  ```JavaScript\n\u003cscript src=\"https://randojs.com/1.0.0.js\"\u003e\u003c/script\u003e\n  ```  \n\n   **Step 2:** Use any of the commands explained at \u003ca href=\"https://randojs.com\" target=\"_blank\"\u003ehttps://randojs.com/\u003c/a\u003e in the document's JavaScript as you like.  \u003cbr/\u003e\u003cbr/\u003e\u003cbr/\u003e\n  \n  \n  \n## :tada:  Examples  \n  ```JavaScript\n   rando()                       //a floating-point number between 0 and 1 (could be exactly 0, but never exactly 1)  \n   rando(5)                      //an integer between 0 and 5 (could be 0 or 5)  \n   rando(5, 10)                  //a random integer between 5 and 10 (could be 5 or 10)  \n   rando(5, \"float\")             //a floating-point number between 0 and 5 (could be exactly 0, but never exactly 5)  \n   rando(5, 10, \"float\")         //a floating-point number between 5 and 10 (could be exactly 5, but never exactly 10)  \n   rando(true, false)            //either true or false  \n   rando([\"a\", \"b\"])             //{index:..., value:...} object representing a value of the provided array OR false if array is empty  \n   rando({a: 1, b: 2})           //{key:..., value:...} object representing a property of the provided object OR false if object has no properties  \n   rando($(\"div\"))               //{index:..., value:...} object representing a jQuery element from the provided jQuery element set OR false if the provided jQuery element set does not contain any elements  \n   rando(\"Gee willikers!\")       //a character from the provided string OR false if the string is empty. Reoccurring characters will naturally form a more likely return value  \n   rando(null)                   //ANY invalid arguments return false  \n  ```\n  \n### \u0026#8674; Prevent repetitions by grabbing a sequence and looping through it  \n  ```JavaScript\n   randoSequence(5)              //an array of integers from 0 through 5 in random order  \n   randoSequence(5, 10)          //an array of integers from 5 through 10 in random order  \n   randoSequence([\"a\", \"b\"])     //an array of {index:..., value:...} objects representing the values of the provided array in random order  \n   randoSequence({a: 1, b: 2})   //an array of {key:..., value:...} objects representing the properties of the provided object in random order  \n   randoSequence($(\"div\"))       //an array of {index:..., value:...} objects representing all jQuery elements from the provided jQuery element set in random order  \n   randoSequence(\"Good gravy!\")  //an array of the characters of the provided string in random order  \n   randoSequence(null)           //ANY invalid arguments return false\n```\n\u003cbr/\u003e\n\u003cp align=\"center\"\u003e\u003ca href=\"#nastyox\"\u003e\u003cimg src=\"http://randojs.com/images/barsSmall.gif\" alt=\"Animated footer bars\" width=\"100%\"/\u003e\u003c/a\u003e\u003c/p\u003e","createdAt":"2020-06-25T15:48:05.298Z","updatedAt":"2020-06-25T15:48:05.298Z","tagList":["money","tag2","tag1","testing","js","random"],"description":"This one is some more complex markdown","author":{"username":"Sree Kotay","bio":"Cool.\n@sreekotay twitter. Come find me. Cuz... why not?","image":"https://miro.medium.com/fit/c/192/192/1*3_39LNZnwKtn-remDCGwiw.jpeg","following":false},"favorited":false,"favoritesCount":2},{"title":"Test","slug":"test-6g2xtb","body":"What in the world is this markdown editor doing?","createdAt":"2020-06-24T20:19:55.885Z","updatedAt":"2020-06-24T20:19:55.885Z","tagList":["testing"],"description":"Testing it out","author":{"username":"uatest01234","bio":null,"image":"https://static.productionready.io/images/smiley-cyrus.jpg","following":false},"favorited":false,"favoritesCount":0},{"title":"Lorem upsum","slug":"lorem-upsum-1y9rbo","body":"# this is very interesting stuff\n\nvery **important** as they say!\n\n## and some more","createdAt":"2020-06-18T14:30:45.833Z","updatedAt":"2020-06-18T14:33:13.198Z","tagList":["article","testing","lorem"],"description":"sample text","author":{"username":"shahabV","bio":"this is the best conduit app ever","image":"https://randomuser.me/api/portraits/men/62.jpg","following":false},"favorited":false,"favoritesCount":1},{"title":"first title","slug":"first-title-ziup5j","body":"# header 1\n\n## header 2\n\ntest","createdAt":"2020-06-06T01:44:34.984Z","updatedAt":"2020-06-06T01:46:09.938Z","tagList":["testing","test"],"description":"testing","author":{"username":"osunguk","bio":null,"image":"https://static.productionready.io/images/smiley-cyrus.jpg","following":false},"favorited":false,"favoritesCount":3}],"articlesCount":137} 
 </msg>
<msg timestamp="20200731 21:45:17.614" level="INFO">c:\users\ncbar\pycharmprojects\automation\venv\lib\site-packages\urllib3\connectionpool.py:981: InsecureRequestWarning: Unverified HTTPS request is being made to host 'conduit.productionready.io'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20200731 21:45:17.615" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200731 21:45:00.230" endtime="20200731 21:45:17.615"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<status status="PASS" starttime="20200731 21:45:17.617" endtime="20200731 21:45:17.619"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<status status="PASS" starttime="20200731 21:45:17.620" endtime="20200731 21:45:17.633"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response.headers}</arg>
</arguments>
<status status="PASS" starttime="20200731 21:45:17.635" endtime="20200731 21:45:17.637"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200731 21:45:17.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200731 21:45:17.638" endtime="20200731 21:45:17.639"></status>
</kw>
<status status="PASS" starttime="20200731 21:45:00.227" endtime="20200731 21:45:17.640" critical="yes"></status>
</test>
<test id="s1-t5" name="Post Comment">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>postcomment</arg>
<arg>${BASE_URL}</arg>
</arguments>
<msg timestamp="20200731 21:45:17.645" level="INFO">Creating Session using : alias=postcomment, url=https://conduit.productionready.io/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200731 21:45:17.644" endtime="20200731 21:45:17.646"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Comment=This is My First Comment</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200731 21:45:17.648" level="INFO">${body} = {'Comment': 'This is My First Comment'}</msg>
<status status="PASS" starttime="20200731 21:45:17.647" endtime="20200731 21:45:17.648"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header1}</var>
</assign>
<msg timestamp="20200731 21:45:17.652" level="INFO">${header1} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200731 21:45:17.651" endtime="20200731 21:45:17.652"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>postcomment</arg>
<arg>/api/articles/1/comments</arg>
<arg>data=${body}</arg>
<arg>headers=${header1}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200731 21:45:32.972" level="WARN">Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProtocolError('Connection aborted.', ConnectionResetError(10054, 'An existing connection was forcibly closed by the remote host', None, 10054, None))': //api/articles/1/comments</msg>
<msg timestamp="20200731 21:45:34.201" level="INFO">PUT Request : url=https://conduit.productionready.io//api/articles/1/comments 
 path_url=//api/articles/1/comments 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '39'} 
 body={"Comment": "This is My First Comment"} 
 </msg>
<msg timestamp="20200731 21:45:34.201" level="INFO">PUT Response : url=https://conduit.productionready.io//api/articles/1/comments 
 status=404, reason=Not Found 
 body=&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;title&gt;The page you were looking for doesn't exist (404)&lt;/title&gt;
&lt;meta name="viewport" content="width=device-width,initial-scale=1"&gt;
&lt;style&gt;
  body {
    background-color: #EFEFEF;
    color: #2E2F30;
    text-align: center;
    font-family: arial, sans-serif;
    margin: 0;
  }

  div.dialog {
    width: 95%;
    max-width: 33em;
    margin: 4em auto 0;
  }

  div.dialog &gt; div {
    border: 1px solid #CCC;
    border-right-color: #999;
    border-left-color: #999;
    border-bottom-color: #BBB;
    border-top: #B00100 solid 4px;
    border-top-left-radius: 9px;
    border-top-right-radius: 9px;
    background-color: white;
    padding: 7px 12% 0;
    box-shadow: 0 3px 8px rgba(50, 50, 50, 0.17);
  }

  h1 {
    font-size: 100%;
    color: #730E15;
    line-height: 1.5em;
  }

  div.dialog &gt; p {
    margin: 0 0 1em;
    padding: 1em;
    background-color: #F7F7F7;
    border: 1px solid #CCC;
    border-right-color: #999;
    border-left-color: #999;
    border-bottom-color: #999;
    border-bottom-left-radius: 4px;
    border-bottom-right-radius: 4px;
    border-top-color: #DADADA;
    color: #666;
    box-shadow: 0 3px 8px rgba(50, 50, 50, 0.17);
  }
  &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;div class="dialog"&gt;
&lt;div&gt;
&lt;h1&gt;The page you were looking for doesn't exist.&lt;/h1&gt;
&lt;p&gt;You may have mistyped the address or the page may have moved.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;If you are the application owner check the logs for more information.&lt;/p&gt;
&lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
 
 </msg>
<msg timestamp="20200731 21:45:34.201" level="INFO">c:\users\ncbar\pycharmprojects\automation\venv\lib\site-packages\urllib3\connectionpool.py:981: InsecureRequestWarning: Unverified HTTPS request is being made to host 'conduit.productionready.io'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20200731 21:45:34.206" level="INFO">${response} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20200731 21:45:17.657" endtime="20200731 21:45:34.206"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<status status="PASS" starttime="20200731 21:45:34.208" endtime="20200731 21:45:34.211"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<status status="PASS" starttime="20200731 21:45:34.212" endtime="20200731 21:45:34.215"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response.headers}</arg>
</arguments>
<status status="PASS" starttime="20200731 21:45:34.216" endtime="20200731 21:45:34.218"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20200731 21:45:34.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200731 21:45:34.221" level="FAIL">404 != 201</msg>
<status status="FAIL" starttime="20200731 21:45:34.219" endtime="20200731 21:45:34.221"></status>
</kw>
<status status="FAIL" starttime="20200731 21:45:17.643" endtime="20200731 21:45:34.224" critical="yes">404 != 201</status>
</test>
<test id="s1-t6" name="Delete Comment">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>deletearticle</arg>
<arg>${BASE_URL}</arg>
</arguments>
<msg timestamp="20200731 21:45:34.231" level="INFO">Creating Session using : alias=deletearticle, url=https://conduit.productionready.io/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200731 21:45:34.230" endtime="20200731 21:45:34.234"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>deletearticle</arg>
<arg>/api/articles/1/comments/1</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200731 21:45:35.634" level="INFO">POST Request : url=https://conduit.productionready.io//api/articles/1/comments/1 
 path_url=//api/articles/1/comments/1 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20200731 21:45:35.634" level="INFO">POST Response : url=https://conduit.productionready.io//api/articles/1/comments/1 
 status=404, reason=Not Found 
 body=&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;title&gt;The page you were looking for doesn't exist (404)&lt;/title&gt;
&lt;meta name="viewport" content="width=device-width,initial-scale=1"&gt;
&lt;style&gt;
  body {
    background-color: #EFEFEF;
    color: #2E2F30;
    text-align: center;
    font-family: arial, sans-serif;
    margin: 0;
  }

  div.dialog {
    width: 95%;
    max-width: 33em;
    margin: 4em auto 0;
  }

  div.dialog &gt; div {
    border: 1px solid #CCC;
    border-right-color: #999;
    border-left-color: #999;
    border-bottom-color: #BBB;
    border-top: #B00100 solid 4px;
    border-top-left-radius: 9px;
    border-top-right-radius: 9px;
    background-color: white;
    padding: 7px 12% 0;
    box-shadow: 0 3px 8px rgba(50, 50, 50, 0.17);
  }

  h1 {
    font-size: 100%;
    color: #730E15;
    line-height: 1.5em;
  }

  div.dialog &gt; p {
    margin: 0 0 1em;
    padding: 1em;
    background-color: #F7F7F7;
    border: 1px solid #CCC;
    border-right-color: #999;
    border-left-color: #999;
    border-bottom-color: #999;
    border-bottom-left-radius: 4px;
    border-bottom-right-radius: 4px;
    border-top-color: #DADADA;
    color: #666;
    box-shadow: 0 3px 8px rgba(50, 50, 50, 0.17);
  }
  &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;div class="dialog"&gt;
&lt;div&gt;
&lt;h1&gt;The page you were looking for doesn't exist.&lt;/h1&gt;
&lt;p&gt;You may have mistyped the address or the page may have moved.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;If you are the application owner check the logs for more information.&lt;/p&gt;
&lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
 
 </msg>
<msg timestamp="20200731 21:45:35.634" level="INFO">c:\users\ncbar\pycharmprojects\automation\venv\lib\site-packages\urllib3\connectionpool.py:981: InsecureRequestWarning: Unverified HTTPS request is being made to host 'conduit.productionready.io'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20200731 21:45:35.638" level="INFO">${response} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20200731 21:45:34.234" endtime="20200731 21:45:35.638"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<status status="PASS" starttime="20200731 21:45:35.640" endtime="20200731 21:45:35.641"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<status status="PASS" starttime="20200731 21:45:35.642" endtime="20200731 21:45:35.647"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response.headers}</arg>
</arguments>
<status status="PASS" starttime="20200731 21:45:35.648" endtime="20200731 21:45:35.650"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200731 21:45:35.653" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200731 21:45:35.653" level="FAIL">404 != 200</msg>
<status status="FAIL" starttime="20200731 21:45:35.652" endtime="20200731 21:45:35.653"></status>
</kw>
<status status="FAIL" starttime="20200731 21:45:34.228" endtime="20200731 21:45:35.655" critical="yes">404 != 200</status>
</test>
<status status="FAIL" starttime="20200731 21:44:10.275" endtime="20200731 21:45:35.660"></status>
</suite>
<statistics>
<total>
<stat pass="3" fail="3">Critical Tests</stat>
<stat pass="3" fail="3">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="3" fail="3" id="s1" name="Tc4">Tc4</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20200731 21:44:25.735" level="WARN">Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProtocolError('Connection aborted.', ConnectionResetError(10054, 'An existing connection was forcibly closed by the remote host', None, 10054, None))': //api/users/login</msg>
<msg timestamp="20200731 21:44:58.359" level="WARN">Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProtocolError('Connection aborted.', ConnectionResetError(10054, 'An existing connection was forcibly closed by the remote host', None, 10054, None))': //api/users/login</msg>
<msg timestamp="20200731 21:45:15.768" level="WARN">Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProtocolError('Connection aborted.', ConnectionResetError(10054, 'An existing connection was forcibly closed by the remote host', None, 10054, None))': //api/articles?limit=10&amp;offset=0&amp;tag=testing</msg>
<msg timestamp="20200731 21:45:32.972" level="WARN">Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProtocolError('Connection aborted.', ConnectionResetError(10054, 'An existing connection was forcibly closed by the remote host', None, 10054, None))': //api/articles/1/comments</msg>
</errors>
</robot>
